<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 8\team tools\static analysis tools\fxcop\Xml\FxCopReport.Xsl"?>
<FxCopReport Version="8">
 <Namespaces>
  <Namespace Name="TerraSoft.Biotech.ProFoGA">
   <Messages>
    <Message TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the capitalization of 'Fo' in namespace name 'TerraSoft.Biotech.ProFoGA'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA\bin\ProFoGA.exe">
   <Modules>
    <Module Name="profoga.exe">
     <Messages>
      <Message TypeName="AssembliesShouldDeclareMinimumSecurity" Category="Microsoft.Usage" CheckId="CA2209" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
       <Issue Certainty="95" Level="CriticalError">No valid permission requests were found for assembly 'ProFoGA'. You should always specify the minimum security permissions using SecurityAction.RequestMinimum. If assembly permission requests have been specified, they are not enforceable; use the PermView.exe tool to view the assembly's permissions. Whidbey customers can use PermCalc.exe which gives even more detailed information.</Issue>
      </Message>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'ProFoGA' with a strong name key.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="TerraSoft.Biotech.ProFoGA">
       <Types>
        <Type Name="Amino" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="DehydC1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Make 'DehydC1' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Issue>
            </Message>
            <Message Id="Dehyd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of the unrecognized token 'Dehyd' in member name 'Amino.DehydC1'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DehydC2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Make 'DehydC2' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Issue>
            </Message>
            <Message Id="Dehyd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of the unrecognized token 'Dehyd' in member name 'Amino.DehydC2'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DehydN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Make 'DehydN' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Issue>
            </Message>
            <Message Id="Dehyd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of the unrecognized token 'Dehyd' in member name 'Amino.DehydN'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Display(System.Drawing.Graphics):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="ParameterOneLetter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="22">In method Amino.Display(Graphics):Void, consider providing a more meaningful name than the one-letter parameter name 'g'.</Issue>
            </Message>
            <Message Id="j" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="22">Amino.Display(Graphics):Void declares a local, 'j', of type System.Byte, which is never used or is only assigned to. Use this local or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Join(TerraSoft.Biotech.ProFoGA.Amino&amp;,TerraSoft.Biotech.ProFoGA.Amino&amp;):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="this" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="MarkAsStatic" Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="291">The 'this' parameter (or 'Me' in VB) of Amino.Join(Amino&amp;, Amino&amp;):Void is never used. Mark the method as static (or Shared in VB) or use 'this'/Me in the method body.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="291">Consider a design that does not require that 'OneAmino' be a reference parameter.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="291">Consider a design that does not require that 'TwoAmino' be a reference parameter.</Issue>
            </Message>
            <Message Id="D" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="291">Amino.Join(Amino&amp;, Amino&amp;):Void declares a local, 'D', of type System.Double, which is never used or is only assigned to. Use this local or remove it.</Issue>
            </Message>
            <Message Id="D2" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="291">Amino.Join(Amino&amp;, Amino&amp;):Void declares a local, 'D2', of type System.Double, which is never used or is only assigned to. Use this local or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Move(System.Double,System.Double,System.Double):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#dy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="177">In method Amino.Move(Double, Double, Double):Void, correct the spelling of the unrecognized token 'dy' in parameter name 'dy' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
            <Message Id="2#dz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="177">In method Amino.Move(Double, Double, Double):Void, correct the spelling of the unrecognized token 'dz' in parameter name 'dz' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Open(System.String):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#fname" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="184">In method Amino.Open(String):Void, correct the spelling of the unrecognized token 'fname' in parameter name 'fname' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="185">Amino.Open(String):Void makes a call to System.String.ToUpper that does not explicitly provide a CultureInfo. This should be replaced with a call to System.String.ToUpper(System.Globalization.CultureInfo).</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="196">Amino.Open(String):Void makes a call to System.Double.Parse(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Double.Parse(System.String,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="197">Amino.Open(String):Void makes a call to System.Double.Parse(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Double.Parse(System.String,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="198">Amino.Open(String):Void makes a call to System.Double.Parse(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Double.Parse(System.String,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Rotate(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="6#th" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="238">In method Amino.Rotate(Double, Double, Double, Double, Double, Double, Double):Void, correct the spelling of the unrecognized token 'th' in parameter name 'th' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="RotateAngC(System.Double):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="th" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="268">Parameter 'th' of Amino.RotateAngC(Double):Void is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="this" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="MarkAsStatic" Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="268">The 'this' parameter (or 'Me' in VB) of Amino.RotateAngC(Double):Void is never used. Mark the method as static (or Shared in VB) or use 'this'/Me in the method body.</Issue>
            </Message>
            <Message Id="0#th" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="268">In method Amino.RotateAngC(Double):Void, correct the spelling of the unrecognized token 'th' in parameter name 'th' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
            <Message Id="Ang" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="268">Correct the spelling of the unrecognized token 'Ang' in member name 'Amino.RotateAngC(Double):Void'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="RotateAngN(System.Double):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="th" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="271">Parameter 'th' of Amino.RotateAngN(Double):Void is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="this" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="MarkAsStatic" Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="271">The 'this' parameter (or 'Me' in VB) of Amino.RotateAngN(Double):Void is never used. Mark the method as static (or Shared in VB) or use 'this'/Me in the method body.</Issue>
            </Message>
            <Message Id="0#th" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="271">In method Amino.RotateAngN(Double):Void, correct the spelling of the unrecognized token 'th' in parameter name 'th' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
            <Message Id="Ang" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Amino.vb" Line="271">Correct the spelling of the unrecognized token 'Ang' in member name 'Amino.RotateAngN(Double):Void'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AminoForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="btnOpen_Click(System.Object,System.EventArgs):System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="amino" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="AminoForm.vb" Line="127">AminoForm.btnOpen_Click(Object, EventArgs):Void declares a local, 'amino', of type TerraSoft.Biotech.ProFoGA.Amino, which is never used or is only assigned to. Use this local or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="LoadAndPaintAmino(TerraSoft.Biotech.ProFoGA.Amino&amp;):System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.IO.StringWriter.#ctor(System.Text.StringBuilder)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="AminoForm.vb" Line="151">AminoForm.LoadAndPaintAmino(Amino&amp;):Void makes a call to System.IO.StringWriter.#ctor(System.Text.StringBuilder) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Atom" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'TerraSoft.Biotech.ProFoGA.Atom' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'TerraSoft.Biotech.ProFoGA.Atom' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="X" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="MemberOneLetter" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than the one-letter token 'X' in member name 'Atom.X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Y" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="MemberOneLetter" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than the one-letter token 'Y' in member name 'Atom.Y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Z" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Z" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="MemberOneLetter" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than the one-letter token 'Z' in member name 'Atom.Z'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BondLink" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'TerraSoft.Biotech.ProFoGA.BondLink' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'TerraSoft.Biotech.ProFoGA.BondLink' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Critter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="Display(System.Drawing.Graphics,System.Drawing.RectangleF):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="90">Correct the casing of parameter name 'ACanvas'.</Issue>
            </Message>
            <Message Id="1#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="90">Correct the casing of parameter name 'ARect'.</Issue>
            </Message>
            <Message Id="0#A" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="90">In method Critter.Display(Graphics, RectangleF):Void, correct the spelling of the unrecognized token 'A' in parameter name 'ACanvas' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
            <Message Id="1#A" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="90">In method Critter.Display(Graphics, RectangleF):Void, correct the spelling of the unrecognized token 'A' in parameter name 'ARect' or strip it entirely if it represents any sort of hungarian notation.</Issue>
            </Message>
            <Message Id="fit" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="90">Critter.Display(Graphics, RectangleF):Void declares a local, 'fit', of type System.Int32, which is never used or is only assigned to. Use this local or remove it.</Issue>
            </Message>
            <Message Id="sb" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="90">Critter.Display(Graphics, RectangleF):Void declares a local, 'sb', of type System.Text.StringBuilder, which is never used or is only assigned to. Use this local or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Sibling(TerraSoft.Biotech.ProFoGA.Critter,TerraSoft.Biotech.ProFoGA.Critter):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="120">Correct the casing of parameter name 'Father'.</Issue>
            </Message>
            <Message Id="1#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2005-05-29 18:10:27Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="C:\Documents and Settings\GSchizas\My Documents\Biotech\DISS\ProFoGA.NET\ProFoGA" File="Critter.vb" Line="120">Correct the casing of parameter name 'Mother'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldDeclareMinimumSecurity" Category="Microsoft.Usage" CheckId="CA2209">
   <Name>Assemblies should declare minimum security</Name>
   <Description>Permission requests prevent security exceptions from being thrown after code in an assembly has already begun executing. With permission requests, the assembly does not load if it has insufficient permissions. This rule will fire if you have specified a permission request incorrectly, or incompletely. If you have specified requests but FxCop reports a violation for this rule, use the PermView.exe tool to view the security permissions in the assembly. An unenforceable permission appears as an empty permission set. Whidbey customers can use PermCalc.exe which gives even more detailed information. You should add attributes specifying what permissions your assembly will demand, might demand, and what permissions it does not want granted.  For example, the following attribute indicates that an assembly will, at minimum, require read access to the UserName environment variable: [assembly:EnvironmentPermissionAttribute(SecurityAction.RequestMinimum,&#xD;&#xA;Read="UserName")]. To specify permissions that the assembly might demand, use SecurityAction.RequestOptional. To specify permissions that the assembly must not be granted, use SecurityAction.RequestRefuse.</Description>
   <Resolution Name="Default">No valid permission requests were found for assembly '{0}'. You should always specify the minimum security permissions using SecurityAction.RequestMinimum. If assembly permission requests have been specified, they are not enforceable; use the PermView.exe tool to view the assembly's permissions. Whidbey customers can use PermCalc.exe which gives even more detailed information.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Usage/AssembliesShouldDeclareMinimumSecurity.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="UsageRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign '{0}' with a strong name key.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Design/AssembliesShouldHaveValidStrongNames.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801">
   <Name>Avoid unused parameters</Name>
   <Description>Avoid declaring parameters that are not used in the method body. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter '{0}' of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Resolution Name="MarkAsStatic">The 'this' parameter (or 'Me' in VB) of {0} is never used. Mark the method as static (or Shared in VB) or use 'this'/Me in the method body.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Performance/AvoidUnusedParameters.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Public or protected instance fields limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the  implementation details of the underlying data.</Description>
   <Resolution Name="Default">Make '{0}' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Design/DoNotDeclareVisibleInstanceFields.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that '{0}' be a reference parameter.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Design/DoNotPassTypesByReference.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are pascal-cased. Parameter identifiers are camel-cased. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor.</Description>
   <Resolution Name="Parameter">Correct the casing of parameter name '{0}'.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Naming/IdentifiersShouldBeCasedCorrectly.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of the unrecognized token '{0}' in member name '{1}'.</Resolution>
   <Resolution Name="MemberOneLetter">Consider providing a more meaningful name than the one-letter token '{0}' in member name '{1}'.</Resolution>
   <Resolution Name="Parameter">In method {0}, correct the spelling of the unrecognized token '{1}' in parameter name '{2}' or strip it entirely if it represents any sort of hungarian notation.</Resolution>
   <Resolution Name="ParameterOneLetter">In method {0}, consider providing a more meaningful name than the one-letter parameter name '{1}'.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Naming/IdentifiersShouldBeSpelledCorrectly.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">'{0}' should override Equals.</Resolution>
   <Resolution Name="op_Equality">'{0}' should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Performance/OverrideEqualsAndOperatorEqualsOnValueTypes.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a local, '{1}', of type {2}, which is never used or is only assigned to. Use this local or remove it.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Performance/RemoveUnusedLocals.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706">
   <Name>Short acronyms should be uppercase</Name>
   <Description>Two letter acronyms should be upper-cased. For example, use System.IO instead of System.Io. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Namespace">Correct the capitalization of '{0}' in namespace name '{1}'.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Naming/ShortAcronymsShouldBeUppercase.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a System.Globalization.CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture.</Description>
   <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide a CultureInfo. This should be replaced with a call to {2}.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Globalization/SpecifyCultureInfo.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the common language runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture.</Description>
   <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide an IFormatProvider. This should be replaced with a call to {2}.</Resolution>
   <Owner />
   <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=unstable&amp;url=/Globalization/SpecifyIFormatProvider.html</Url>
   <Email>fxcopbug@microsoft.com</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
 </Rules>
</FxCopReport>
